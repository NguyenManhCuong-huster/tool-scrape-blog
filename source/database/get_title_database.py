import os
import pandas as pd
import requests
from dotenv import load_dotenv

# === Thi·∫øt l·∫≠p ƒë∆∞·ªùng d·∫´n t∆∞∆°ng ƒë·ªëi theo v·ªã tr√≠ file n√†y ===
BASE_DIR = os.path.dirname(os.path.abspath(__file__))

def rel_path(*parts):
    return os.path.join(BASE_DIR, *parts)

# === H√†m 1: G·ªçi API l·∫•y d·ªØ li·ªáu ===
def fetch_blog_data(from_date, to_date):
    load_dotenv(dotenv_path=rel_path("../../.env"))

    api_url = os.getenv("API_URL")
    api_key = os.getenv("API_KEY")

    payload = {
        "fromdate": from_date,
        "todate": to_date,
        "key": api_key
    }

    res = requests.post(api_url, json=payload)

    if res.status_code == 200:
        json_data = res.json()
        blog_items = json_data.get("data", {}).get("data", [])
        results = []

        for item in blog_items:
            _id = item.get("_id")
            title = item.get("new_title")
            link = item.get("link")
            if _id and title and link:
                results.append({
                    "_id": _id,
                    "title": title,
                    "link": link
                })

        return results
    else:
        raise Exception(f"API l·ªói: {res.status_code}")

# === H√†m 2: L∆∞u k·∫øt qu·∫£ ra Excel t·∫°m ===
def save_blog_data(data, filename="blog_list_new.xlsx"):
    df = pd.DataFrame(data)
    df.to_excel(rel_path("../../database", filename), index=False, engine='openpyxl')

# === H√†m 3: N·ªëi file m·ªõi + c≈©, r·ªìi ghi ƒë√® l·∫°i file ch√≠nh ===
def merge_and_save(old_file="blog_list.xlsx", new_file="blog_list_new.xlsx"):
    path_old = rel_path("../../database", old_file)
    path_new = rel_path("../../database", new_file)

    df_old = pd.read_excel(path_old)
    df_new = pd.read_excel(path_new)

    df_combined = pd.concat([df_old, df_new], ignore_index=True)
    df_combined = df_combined.drop_duplicates(subset='link', keep='first')

    df_combined.to_excel(path_old, index=False)
    print("‚úÖ ƒê√£ n·ªëi v√† c·∫≠p nh·∫≠t d·ªØ li·ªáu v√†o", old_file)

# === H√†m t·ªïng: ch·∫°y to√†n b·ªô quy tr√¨nh ===
def run_full_pipeline():
    try:
        #to_date l√† l·∫ßn cu·ªëi c·∫≠p nh·∫≠t database, ch·ªâ c·∫ßn ƒë·ªïi from_date = to_date, to_date = timestamp hi·ªán t·∫°i
        data = fetch_blog_data(from_date=1752461999, to_date=1752639951)
        print(f"üîπ L·∫•y ƒë∆∞·ª£c {len(data)} b√†i vi·∫øt t·ª´ API.")
        save_blog_data(data)
        merge_and_save()
    except Exception as e:
        print("‚ùå L·ªói:", e)

# === N·∫øu mu·ªën ch·∫°y tr·ª±c ti·∫øp file n√†y ===
if __name__ == "__main__":
    run_full_pipeline()
